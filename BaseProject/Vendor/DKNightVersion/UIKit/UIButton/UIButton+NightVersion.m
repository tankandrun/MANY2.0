//
//  UIButton+NightVersion.m
//  UIButton+NightVersion
//
//  Copyright (c) 2015 Draveness. All rights reserved.
//
//  These files are generated by ruby script, if you want to modify code
//  in this file, you are supposed to update the ruby code, run it and
//  test it. And finally open a pull request.

#import "UIButton+NightVersion.h"
#import "DKNightVersionManager.h"
#import "DKNightVersionUtility.h"

@implementation UIButton (NightVersion)

#pragma mark - ChangeColor

- (void)changeColorWithDuration:(CGFloat)duration {
    if ([DKNightVersionUtility shouldChangeColor:self]) {
        
        [UIView animateWithDuration:duration animations:^{
            [self setTitleColor:([DKNightVersionManager currentThemeVersion] == DKThemeVersionNight) ? self.nightTColorN : self.normalTitleColorN forState:UIControlStateNormal];
            [self setTitleColor:([DKNightVersionManager currentThemeVersion] == DKThemeVersionNight) ? self.nightTColorS : self.normalTitleColorS forState:UIControlStateSelected];
            [self setTitleColor:([DKNightVersionManager currentThemeVersion] == DKThemeVersionNight) ? self.nightTColorH : self.normalTitleColorH forState:UIControlStateHighlighted];
            [self setTitleColor:([DKNightVersionManager currentThemeVersion] == DKThemeVersionNight) ? self.nightTColorD : self.normalTitleColorD forState:UIControlStateDisabled];
            
            [self setBackgroundColor:([DKNightVersionManager currentThemeVersion] == DKThemeVersionNight) ? self.nightBackgroundColor : self.normalBackgroundColor];
            
        }];
        
        [self setImage:([DKNightVersionManager currentThemeVersion] == DKThemeVersionNormal) ? self.normalImageN : self.nightImageN forState:UIControlStateNormal];
        [self setImage:([DKNightVersionManager currentThemeVersion] == DKThemeVersionNormal) ? self.normalImageH : self.nightImageH forState:UIControlStateHighlighted];
        [self setImage:([DKNightVersionManager currentThemeVersion] == DKThemeVersionNormal) ? self.normalImageS : self.nightImageS forState:UIControlStateSelected];
        [self setImage:([DKNightVersionManager currentThemeVersion] == DKThemeVersionNormal) ? self.normalImageD : self.nightImageD forState:UIControlStateDisabled];
        
        [self setBackgroundImage:([DKNightVersionManager currentThemeVersion] == DKThemeVersionNormal) ? self.normalBackImageN : self.nightBackImageN forState:UIControlStateNormal];
        [self setBackgroundImage:([DKNightVersionManager currentThemeVersion] == DKThemeVersionNormal) ? self.normalBackImageH : self.nightBackImageH forState:UIControlStateHighlighted];
        [self setBackgroundImage:([DKNightVersionManager currentThemeVersion] == DKThemeVersionNormal) ? self.normalBackImageS : self.nightBackImageS forState:UIControlStateSelected];
        [self setBackgroundImage:([DKNightVersionManager currentThemeVersion] == DKThemeVersionNormal) ? self.normalBackImageD : self.nightBackImageD forState:UIControlStateDisabled];
    }
}

- (void)changeColor {
    if ([DKNightVersionUtility shouldChangeColor:self]) {
        [self setTitleColor:([DKNightVersionManager currentThemeVersion] == DKThemeVersionNight) ? self.nightTColorN : self.normalTitleColorN forState:UIControlStateNormal];
        [self setTitleColor:([DKNightVersionManager currentThemeVersion] == DKThemeVersionNight) ? self.nightTColorS : self.normalTitleColorS forState:UIControlStateSelected];
        [self setTitleColor:([DKNightVersionManager currentThemeVersion] == DKThemeVersionNight) ? self.nightTColorH : self.normalTitleColorH forState:UIControlStateHighlighted];
        [self setTitleColor:([DKNightVersionManager currentThemeVersion] == DKThemeVersionNight) ? self.nightTColorD : self.normalTitleColorD forState:UIControlStateDisabled];
        
        [self setBackgroundColor:([DKNightVersionManager currentThemeVersion] == DKThemeVersionNight) ? self.nightBackgroundColor : self.normalBackgroundColor];
        
        [self setImage:([DKNightVersionManager currentThemeVersion] == DKThemeVersionNormal) ? self.normalImageN : self.nightImageN forState:UIControlStateNormal];
        [self setImage:([DKNightVersionManager currentThemeVersion] == DKThemeVersionNormal) ? self.normalImageH : self.nightImageH forState:UIControlStateHighlighted];
        [self setImage:([DKNightVersionManager currentThemeVersion] == DKThemeVersionNormal) ? self.normalImageS : self.nightImageS forState:UIControlStateSelected];
        [self setImage:([DKNightVersionManager currentThemeVersion] == DKThemeVersionNormal) ? self.normalImageD : self.nightImageD forState:UIControlStateDisabled];
        
        [self setBackgroundImage:([DKNightVersionManager currentThemeVersion] == DKThemeVersionNormal) ? self.normalBackImageN : self.nightBackImageN forState:UIControlStateNormal];
        [self setBackgroundImage:([DKNightVersionManager currentThemeVersion] == DKThemeVersionNormal) ? self.normalBackImageH : self.nightBackImageH forState:UIControlStateHighlighted];
        [self setBackgroundImage:([DKNightVersionManager currentThemeVersion] == DKThemeVersionNormal) ? self.normalBackImageS : self.nightBackImageS forState:UIControlStateSelected];
        [self setBackgroundImage:([DKNightVersionManager currentThemeVersion] == DKThemeVersionNormal) ? self.normalBackImageD : self.nightBackImageD forState:UIControlStateDisabled];
    }
}

@end
